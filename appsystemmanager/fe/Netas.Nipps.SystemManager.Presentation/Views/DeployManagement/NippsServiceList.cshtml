@using Netas.Nipps.SystemManager.Presentation.Models;
@using Netas.Nipps.BaseDao.Model.Response;
@using Microsoft.Web.Administration;

@{ 
}

@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@Resources.Global.MenuSystemMaintenance</h1>
            </hgroup>
        </div>
    </section>
}

@using (Html.BeginForm("NippsDeployConfirm", "DeployManagement", FormMethod.Get, new { @id = "maintenanceForm" }))
{
    <input type="submit" value="@Resources.Global.Deploy" />
    <button onclick="$('#maintenanceForm').Nipps_SubmitTo('@Url.Action("NippsBackupConfirm", "BackupManagement")', 'GET'); ">
        <img src="../Images/Backup.png" /> @Resources.Global.Backup
    </button>
    <button onclick="$('#maintenanceForm').Nipps_SubmitTo('@Url.Action("NippsRestoreList", "BackupManagement")', 'GET');">
        <img src="../Images/backup-restore.png" /> @Resources.Global.Restore
    </button>
    <button onclick="$('#maintenanceForm').Nipps_SubmitTo('@Url.Action("NippsUpgradeList", "BackupManagement")', 'GET');">
        <img src="../Images/upgrade.png" /> @Resources.Global.Upgrade
    </button>
    <button onclick="$('#maintenanceForm').Nipps_SubmitTo('@Url.Action("NippsConfigBackupConfirm", "BackupManagement")', 'GET');">
        <img src="../Images/Backup.png" /> @Resources.Global.ConfigBackup
    </button>
    <button onclick="$('#maintenanceForm').Nipps_SubmitTo('@Url.Action("NippsConfigRestoreList", "BackupManagement")', 'GET');">
        <img src="../Images/backup-restore.png" /> @Resources.Global.ConfigRestore
    </button>

}

<table id="serviceListTable" class="display compact">

    <thead>
        <tr>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th>@Resources.Global.ApplicationName</th>
            <th>@Resources.Global.Version</th>
            <th>@Resources.Global.HostName</th>
            <th>@Resources.Global.SiteName</th>
            <th>@Resources.Global.ApplicationPoolName</th>
        </tr>
    </thead>

    <tbody>

    </tbody>

</table>

<div id="ConfirmBox">
<p id="ConfirmBoxMessage"></p>
</div>

<script type="text/javascript">

    var tableData = new Array();
    var recycleUrl = '@Url.Action("NippsRecycle")';
    var stopUrl = '@Url.Action("NippsStop")';
    var removeUrl = '@Url.Action("NippsUndeploy")';
    var stateIcons = new Array('../Images/bullet_green.png', '../Images/bullet_green.png', '../Images/bullet_red.png', '../Images/bullet_red.png', '../Images/bullet_yellow.png');
    var stateTitles = new Array('@Resources.Global.Started', '@Resources.Global.Started', '@Resources.Global.Stopped', '@Resources.Global.Stopped', '@Resources.Global.Other');

    @if (ViewBag.Result == Result.OK)
    {
        foreach (Nipps nipps in ViewBag.ResultList)
        {
    <text>
    tableData.push({
        "ApplicationName": "@nipps.ApplicationName"
        , "Version": "@nipps.Version"
        , "HostName": "@nipps.HostName"
        , "SiteName": "@nipps.SiteName"
        , "ApplicationPoolName": "@nipps.ApplicationPoolName"
        , "State": "@((int)nipps.State)"
    });
    </text>
        }
    }

    $("#serviceListTable").DataTable({
        data: tableData
        , order: [[4, 'asc']]
        , language: DataTableLanguage
        , columnDefs: [
            {
                targets: 0
                , width: 24
                , orderable: false
                , searchable: false
                , data: function (row) {
                    return '<img class="gridRowInlineLink" src="' + stateIcons[row.State] + '" title="' + stateTitles[row.State] + '" />';
                }
            }
            , {
                targets: 1
                , width: 24
                , orderable: false
                , searchable: false
                , data: function (row) {
                    var href = stopUrl + '?HostName=' + row.HostName + '&ApplicationPoolName=' + row.ApplicationPoolName;
                    return '<a title="@Resources.Global.Stop" href="' + href + '" onclick="return confirmStopPool(\'' + row.ApplicationPoolName + '\');"><img src="../Images/stopIcon.png" class="gridRowInlineLink" /></a>';
                }
            }
            , {
                targets: 2
                , width: 24
                , orderable: false
                , searchable: false
                , data: function (row) {
                    var href = recycleUrl + '?HostName=' + row.HostName + '&ApplicationPoolName=' + row.ApplicationPoolName;
                    return '<a title="@Resources.Global.Recycle" href="' + href + '" onclick="return confirmRestartPool(\'' + row.ApplicationPoolName + '\');"><img src="../Images/startIcon.png" class="gridRowInlineLink" /></a>';
                }
            }
            , {
                targets: 3
                , width: 24
                , orderable: false
                , searchable: false
                , data: function (row) {
                    var fullName = row.HostName + ">" + row.SiteName + ">" + row.ApplicationName;
                    var href = removeUrl + '?HostName=' + row.HostName + '&SiteName=' + row.SiteName + '&ApplicationName=' + row.ApplicationName;
                    return '<a title="@Resources.Global.Undeploy" href="' + href + '" onclick="return confirmRemoveApp(\'' + fullName + '\');"><img src="../Images/deleteIcon.png" class="gridRowInlineLink" /></a>';
                }
            }
            , {
                targets: 4
                , data: function (row) {
                    return row.ApplicationName;
                }
            }
            , {
                targets: 5
                , data: function (row) {
                    return row.Version;
                }
            }
            , {
                targets: 6
                , data: function (row) {
                    return row.HostName;
                }
            }
            , {
                targets: 7
                , data: function (row) {
                    return row.SiteName;
                }
            }
            , {
                targets: 8
                , data: function (row) {
                    return row.ApplicationPoolName;
                }
            }
        ]
    });

    function confirmRestartPool(pool) {
        return confirm('(' + pool + ') @Resources.Global.MessageConfirmRestartPool');
    }

    function confirmStopPool(pool) {
        return confirm('(' + pool + ') @Resources.Global.MessageConfirmStopPool');
    }

    function confirmRemoveApp(name) {
        return confirm('(' + name + ') @Resources.Global.MessageRemoveAppConfirm');
    }

</script>
